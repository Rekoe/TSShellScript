# user group 
user  nginx nginx;
# work process
worker_processes  2;
# error log
error_log  logs/error.log;
# pid file
pid        var/run/nginx.pid;

events {
    use epoll;
    worker_connections  4096;
}

http {
    include       mime.types;
    charset  	  utf-8;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';

    sendfile      on;
    tcp_nopush    on;
    tcp_nodelay	  off;

    keepalive_timeout  65;

    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    gzip_proxied any;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    upstream  auth.jxhd365.com {
        server 192.168.1.2:8080;
        server 192.168.1.4:8080;
    }
    upstream  service.jxhd365.com {
        server 192.168.1.2:8080;
        server 192.168.1.4:8080;
    }

    server {
        listen       80;
        server_name  auth.jxhd365.com;

        access_log   logs/auth.jxhd365.com.access.log  main;

        location / {
      	    proxy_pass http://auth.jxhd365.com;
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen       80;
        server_name  service.jxhd365.com;

        access_log   logs/service.jxhd365.com.access.log  main;

        location / {
      	    proxy_pass http:/service.jxhd365.com;
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    server {
        listen       80;
        server_name  media.jxhd365.com;

        access_log   logs/media.jxhd365.com.access.log  main;
		
	location / {
	    set $image_root /opt/wwwroot/jxhd365.com/media.jxhd365.com;
	    set $file "$image_root$uri";

	    if (!-f $request_filename) {
		rewrite_by_lua '
		    local index = string.find(ngx.var.uri, "([0-9]+)x([0-9]+)");  
          	    local originalUri = string.sub(ngx.var.uri, 0, index-2);  
          	    local area = string.sub(ngx.var.uri, index);  
          
		    index = string.find(area, "([.])");  
          	    area = string.sub(area, 0, index-1);
		    
		    local image_sizes = {"140x140", "800x800", "90x90"};
		    function table.contains(table, element)
			for _, value in pairs(table) do
			    if value == element then
				return true
			    end
			end
			return false
		    end

		    if table.contains(image_sizes, area) then
			local command = "/opt/tools/graphicsmagick/bin/gm convert " .. ngx.var.image_root .. originalUri  .. " -thumbnail " .. area .. " -gravity center -extent " .. area .. " " .. ngx.var.file;
			ngx.log(ngx.ERR,command);
			os.execute(command);
		    else
			ngx.exit(404);
		    end;
		';
	    }
	    alias /opt/wwwroot/jxhd365.com/media.jxhd365.com/image;
	}
    }
}
